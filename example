#!/usr/bin/env python3

import json
import time
import sys
import openchannel as oc

marketplaceid = "MARKET PLACE ID HERE"
secret = "SECRET GOES HERE"

cli = oc.Client(marketplaceid, secret)

icon="https://opengameart.org/sites/default/files/styles/medium/public/example_letter_green.png"
cyberprobe="https://github.com/cybermaggedon/cyberprobe/releases/download/v1.9.11/fedora-cyberprobe-1.9.11-1.fc27.x86_64.rpm"

#########################################################################

market = cli.get_market()
print("Market: %s %s" % (market.marketplaceId, market.name))

#########################################################################

# Get list of apps, and then delete them.

apps = cli.list_apps()

for v in apps:
    print("Deleting %s..." % v.name)
    v.delete()

#########################################################################

# Create 'Fish' app.
app = oc.App(client=cli)
app.name = "Fish"
app.author = "Example Ltd."
app.access = ["steal-secrets", "encrypt-files"]
app.customData.description = "Here is an app"
app.customData.summary = "Here is an app"
app.customData.icon = icon
app.customData.category = [ "cybersecurity" ]
app.customData.video = [ "https://www.youtube.com/watch?v=K7CnMQ4L9Pc" ]
app.customData.images = [
    "https://upload.wikimedia.org/wikipedia/commons/7/73/Lion_waiting_in_Namibia.jpg"
]
app.developerId = "1"
m = oc.Model(client=cli)
m.type = "single"
m.price = 200
m.license = "single"
m.customData = oc.CustomData()
m.customData.bunchy = "hello"
app.model = [m]

app = app.create()
print("App created.")

# Store stuff coming back on app creation.
appid = app.appId
safename = app.safeName[0]

print("  Safe name is " + safename)
print("  Created %s %s" % (app.name, app.appId))

# Publish version v1.
app.publish_version(1, autoApprove=True)
print("Published v1.")

#########################################################################

review = oc.Review(client=cli)
review.appId = appid
review.userId = "1"
review.headline = "What a great app"
review.rating = 400
review.description = "What a bunch of stuff"
review.mustOwnApp = False
review.customData.bunchy = "12389123"
review = review.create()

print("  Review: %s %s" % (review.rating, review.headline))

reviewid = review.reviewId

review.rating = 300
review.headline = "It's OK"

review = review.update()

review = cli.get_review(reviewid)

print(review.encode())

print("  Review: %s %s" % (review.rating, review.headline))

review = cli.get_review_by_app_user(app, cli.get_user("1"))
print("  Review: %s %s" % (review.rating, review.headline))

print("Reviews:")
reviews = cli.list_reviews()
for review in reviews:
    print("  Review: %s %s" % (review.rating, review.headline))

#########################################################################

perm = oc.Permission(client=cli)
perm.userId = "1"
perm = perm.add(app)
print(perm.encode())
perm.delete(app)

#########################################################################

# Update some stuff.
app.customData.description = "Bunchy"
app.name = "Wonky"
app.author = "Hello world"
app = app.update(1)

version = app.version
print("Updated %s %s" % (app.name, app.appId))
print("  Description is now %s." % app.customData.description)

app.publish_version(version, autoApprove=True)
print("Published v" + str(version))

app = cli.get_app_version(appid, 1)
print("v1 name is " + app.name)
app = cli.get_app_version(appid, 2)
print("v2 name is " + app.name)

app = cli.get_app(appid)
print("Name is now " + app.name)

app.change_live_version(1)
print("v1 is live")

app = cli.get_app(appid)
print("Name is now " + app.name)

print("Status is " + app.status.value)
app.status_change("suspend", "API testing")

app = cli.get_app(appid)
print("Status is " + app.status.value)

app.status_change("unsuspend", "API testing")

app = cli.get_app(appid)
print("Status is " + app.status.value)

app = cli.get_app_by_safename(safename)
print("App %s is %s" % (app.safeName[0], app.name))

#########################################################################

grp = oc.DeveloperGroup(client=cli)
grp.groupId = "abcde"
grp.customData.companyName = "Example Ltd."
grp = grp.update()
print(grp.encode())

grp = cli.get_developer_group("abcde")
print(grp.encode())

print("Developer 1:")
dev = cli.get_developer("1")
print("  " + dev.encode())

print("Developers:")
devs = cli.list_developers()
for dev in devs:
    print("  " + dev.encode())

dev = cli.get_developer("1")
dev.name = "Mark"
dev.email = "mark@example.org"
dev.customData.companyName = "Example Ltd."
dev.customData.interests = ["cybersecurity", "cycling"]

dev = dev.update()
print(dev.encode())

dev = oc.Developer(client=cli)
dev.developerId = "233"
dev.groupId = "abcde"
dev.name = "Brian"
dev.update()

print("Developer 233:")
dev = cli.get_developer("233")
print("  " + dev.encode())

#########################################################################

grp = oc.UserGroup(client=cli)
grp.groupId = "zzzabcde"
grp.customData.companyName = "Example Ltd."
grp = grp.update()
print(grp.encode())

grp = cli.get_user_group("zzzabcde")
print(grp.encode())

print("User 1:")
usr = cli.get_user("1")
print("  " + usr.encode())

print("Users:")
usrs = cli.list_users()
for usr in usrs:
    print("  " + usr.encode())

usr = cli.get_user("1")
usr.name = "Mark"
usr.email = "mark@example.org"
usr.customData.companyName = "Example Ltd."
usr.customData.interests = ["cybersecurity", "cycling"]

usr = usr.update()
print(usr.encode())

usr = oc.User(client=cli)
usr.userId = "3233"
usr.groupId = "zzzabcde"
usr.name = "Brian"
usr.update()

print("User 3233:")
usr = cli.get_user("3233")
print("  " + usr.encode())

#########################################################################

file = cli.upload_file("file", "hello world")
print("Uploaded /etc/hosts as " + file.fileUrl)
print("  ID " + file.fileId)

file = cli.upload_url(cyberprobe)
print("Uploaded cyberprobe as " + file.fileUrl)
print("  ID " + file.fileId)

#########################################################################

own = cli.install_app(usr, app, app.model[0])
print("Installed app.")

print("Transactions:")
transes = cli.list_transactions()
for t in transes:
    print("  %s" % t.encode())

trans = oc.Transaction()
trans.amount = 200
trans.customData.billing = "sales team"

trans = cli.custom_gateway_add_payment(own, trans)
print("Transaction: " + trans.encode())

print("Transactions:")
transes = cli.list_transactions()
for t in transes:
    print("  %s" % t.encode())

trans = cli.custom_gateway_add_refund(own, trans)
print("Transaction: " + trans.encode())

trans.delete()
print("Refund deleted.")

print("Transactions:")
transes = cli.list_transactions()
for t in transes:
    print("  %s" % t.encode())

sys.exit(0)

own = cli.get_ownership(own.ownershipId)
print(own.encode())

own.customData.bunchy = "Hello"
own = own.update()
own = cli.get_ownership(own.ownershipId)
print("  " + own.encode())

print("Product keys:")
owns = cli.list_ownership()
for o in owns:
    print("  %s" % o.productKey)

cli.uninstall_app(own)

print("Uninstalled.")

#########################################################################

print("Stats:")
stats = cli.get_stats_total()

for v in stats.apps:
    stat = stats.apps[v]
    app = cli.get_app(v)
    print("  " + app.name, stat["downloads"], stat["views"])

stats = cli.get_stats_series(start=1000 * int(time.time() - (86400 * 7)), end=1000 * int(time.time()))

print("Series:")
print(stats)

#########################################################################

print("Search:")
apps = cli.search_apps("GCP")
for v in apps:
    print("  %s version %s..." % (v.name, v.version))

print("All versions:"    )
apps = cli.list_app_versions()

for v in apps:
    print("  %s version %s..." % (v.name, v.version))



